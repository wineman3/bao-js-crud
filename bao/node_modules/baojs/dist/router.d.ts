/// <reference types="bun-types" />
import { IHandler } from "./bao";
import Context from "./context";
import Middleware from "./middleware";
export default class Router {
    #private;
    /**
     * The middleware used by this router
     */
    middleware: Middleware;
    /**
     * Register a route with the router
     *
     * @param method The HTTP method
     * @param path The path of the route
     * @param handler The path handler function
     */
    register(method: TMethods, path: string, handler: IHandler): void;
    /**
     * Handles an incoming request
     *
     * @param ctx The Context object created by the request
     * @returns The Response generated by the path handler and middleware
     */
    handle(ctx: Context): Promise<Response>;
}
export declare type TMethods = "ANY" | "GET" | "HEAD" | "POST" | "PUT" | "DELETE" | "CONNECT" | "OPTIONS" | "TRACE" | "PATCH";
